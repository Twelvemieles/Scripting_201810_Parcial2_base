Componente Teórico (1.45)

1. OK (0.2)

2. a) Ajá, y qué de OOP se aplica para esto? El singleton es correcto, pero la respuesta está a medias (0.15)
2. b) OK (0.25)
2. c) OK (0.25)
2. d) La tarea del factory es crear. El pooling se encargaría de guardar nuevas instancias que el factory devuelva (0.1)

3. Ojo, no se llaman "filas", sino "colas".(0.5)
4. No hay respuesta (0.0)

Componente Práctico (0.2)

1. A los enemigos no se les puede configurar el tipo de ninguna manera, y, en consecuencia, ninguno de los parámetros. (0.0)
2. Aquí era obvio usar singleton. Si bien el enemigo busca al "Manager" en la cámara, esto no es un singleton; además es un tipo de actor que no se pone en un objeto de la escena porque podría destruirse y se dañaría la aplicación (0.3)
3. No hay generador de enemigos (0.0)
4. Los enemigos no tienen funcionalidad de moverse (0.0)

* Se dispara una excepción al dar "play" concerniente al "Manager" (-0.1)
* No se puede probar la ejecución porque no está configurado correctamente.
* Hiciste a Enemy abstracta, y eso ocasiona errores a la hora de instanciarlos. Una clase abstracta no se puede instanciar, y no creaste las subclases necesarias.
* La implementación de la interfaz para las balas está incompleta, pero la estrategia es válida.

Total: 1.65
